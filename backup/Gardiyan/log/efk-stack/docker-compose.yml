
services:
  elasticsearch:
    image: nexusdev.cekino.com/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx2048m"
      - ELASTIC_PASSWORD=Gardiyan.2025! 
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - gardiyan_network
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  kibana:
    image: nexusdev.cekino.com/kibana:7.17.9
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=Gardiyan.2025!
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - gardiyan_network
  filebeat:
    image: nexusdev.cekino.com/filebeat:7.17.9
    container_name: filebeat
    user: root
    networks:
      - gardiyan_network  
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=Gardiyan.2025!
    depends_on:
      - elasticsearch
      - kibana
  metricbeat:
    image: nexusdev.cekino.com/metricbeat:7.17.9
    container_name: metricbeat
    user: root
    command:
      - metricbeat
      - -e
      - -strict.perms=false
    networks:
      - gardiyan_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
      - ./metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
    depends_on:
      - elasticsearch
      - kibana    
  cadvisor:
    image: nexusdev.cekino.com/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8099:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - gardiyan_network
  prometheus:
    image: nexusdev.cekino.com/prom/prometheus:latest
    container_name: prometheus
    networks:
      - gardiyan_network
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=7d"
      - "--storage.tsdb.retention.size=10GB"
      - "--storage.tsdb.wal-compression"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9095:9090"
  grafana:
    image: nexusdev.cekino.com/grafana:latest
    container_name: grafana
    ports:
      - "1453:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - gardiyan_network        
volumes:
  esdata:
  prometheus_data:

networks:
  gardiyan_network:
    driver: bridge
