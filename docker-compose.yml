version: "3.9"

volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:

networks:
  demo: {}

# ---- ANCHORS ----
x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  restart: unless-stopped
  env_file: [.env]
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
    - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    - GENERIC_TIMEZONE=Europe/Istanbul
    - TZ=Europe/Istanbul
    - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
  healthcheck:
    test: ["CMD", "node", "-e", "require('http').get('http://localhost:5678/healthz',r=>process.exit(r.statusCode===200?0:1))"]
    interval: 10s
    timeout: 5s
    retries: 10

x-ollama: &service-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  restart: unless-stopped
  ports: ["11434:11434"]
  volumes:
    - ollama_storage:/root/.ollama
  healthcheck:
    test: ["CMD", "curl", "-fsS", "http://localhost:11434/api/tags"]
    interval: 10s
    timeout: 5s
    retries: 20
    start_period: 10s

# ---- SERVICES ----
services:
  postgres:
    image: postgres:16-alpine
    networks: ['demo']
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=Europe/Istanbul
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *service-n8n
    ports: ["5678:5678"]
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy

  # CPU (varsayılan)
  ollama:
    <<: *service-ollama
    profiles: ["cpu"]

  # NVIDIA GPU (önerilen basit yöntem: gpus: all)
  ollama-gpu:
    <<: *service-ollama
    profiles: ["gpu-nvidia"]
    gpus: all
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility

  # AMD ROCm
  ollama-gpu-amd:
    <<: *service-ollama
    image: ollama/ollama:rocm
    profiles: ["gpu-amd"]
    devices:
      - "/dev/kfd"
      - "/dev/dri"
    security_opt:
      - seccomp:unconfined
    group_add:
      - "render"
